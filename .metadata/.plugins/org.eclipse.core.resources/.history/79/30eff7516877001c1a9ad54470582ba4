package com.medicalstoreapp.reportms.controller;

import java.time.LocalDate;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import com.medicalstoreapp.reportms.dto.CreateReportRequest;
import com.medicalstoreapp.reportms.dto.ReportDetails;
import com.medicalstoreapp.reportms.service.ReportServiceImpl;
import com.medicalstoreapp.reportms.util.DateConverter;

@RequestMapping("/reports")
@RestController
@CrossOrigin("*")
public class ReportRestController {
	
	@Autowired
	private ReportServiceImpl service;
	
	@Autowired
	private DateConverter dateConverter;
	
	
	@ResponseStatus(HttpStatus.CREATED)
    @PostMapping("/generate")
    public ReportDetails generateReport(@RequestBody CreateReportRequest requestData) {
        ReportDetails desired = service.generateReportInPeriod(requestData) ;
        return desired;
    }
	
	@GetMapping("/byreportid/{id}")
    public ReportDetails fetchReportById( @PathVariable("id") Long id) {
        ReportDetails response = service.findReportDetailsById(id);
        return response;
    }
	
	@GetMapping("/byPeriod/{startdate}/{enddate}")
    public ReportDetails fetchReportByPeriod( @PathVariable("startdate") String startPeriod,@PathVariable("enddate") String endPeriod) {
		LocalDate startDate=dateConverter.toDate(startPeriod);
		LocalDate endDate=dateConverter.toDate(endPeriod);
        ReportDetails response = service.findReportByPeriod(startDate, endDate);
        return response;
    }
	
	@GetMapping("/byreporttype/{type}")
    public List<ReportDetails> fetchReportsByReportType( @PathVariable("type") String reportType) {
        List<ReportDetails> response = service.findAllReportsByReportType(reportType);
        return response;
    }
	
	@DeleteMapping("/delete/byreportid/{id}")
    public String deleteReport(@PathVariable("id") Long reportId) {
        service.deleteReportById(reportId) ;
        return "Report with id " +reportId+ " is deleted" ;
    }
	
	@GetMapping("/all")
    public List<ReportDetails> fetchAll() {
        List<ReportDetails> response = service.findAllReports();
        return response;
    }

}
